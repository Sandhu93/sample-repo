import cv2

# Load YOLOv3-tiny weights and configuration files
net = cv2.dnn.readNet("yolov3-tiny.weights", "yolov3-tiny.cfg")

# Load classes for object detection
classes = []
with open("coco.names", "r") as f:
    classes = [line.strip() for line in f.readlines()]

# Set up camera
cap = cv2.VideoCapture(0)

# Process frames from camera feed
while True:
    # Read frame from camera
    ret, frame = cap.read()

    # Create blob from frame for input to YOLO
    blob = cv2.dnn.blobFromImage(frame, 1/255, (416, 416), swapRB=True, crop=False)

    # Set input to YOLO network
    net.setInput(blob)

    # Run YOLO on input
    outputs = net.forward()

    # Process YOLO outputs
    for output in outputs:
        for detection in output:
            scores = detection[5:]
            class_id = np.argmax(scores)
            confidence = scores[class_id]

            if confidence > 0.5:
                # Object detected, draw bounding box
                center_x = int(detection[0] * frame.shape[1])
                center_y = int(detection[1] * frame.shape[0])
                width = int(detection[2] * frame.shape[1])
                height = int(detection[3] * frame.shape[0])
                left = int(center_x - width / 2)
                top = int(center_y - height / 2)

                cv2.rectangle(frame, (left, top), (left + width, top + height), (0, 255, 0), 2)
                cv2.putText(frame, classes[class_id], (left, top), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 1)

    # Display frame
    cv2.imshow('Object Detection', frame)

    # Exit program if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Clean up
cap.release()
cv2.destroyAllWindows()

[ERROR:0@1.469] global net_impl.cpp:1161 getLayerShapesRecursively OPENCV/DNN: [Concat]:(concat_20): getMemoryShapes() throws exception. inputs=2 outputs=1/1 blobs=0
[ERROR:0@1.469] global net_impl.cpp:1167 getLayerShapesRecursively     input[0] = [ 1 128 26 26 ]
[ERROR:0@1.469] global net_impl.cpp:1167 getLayerShapesRecursively     input[1] = [ 1 256 25 25 ]
[ERROR:0@1.469] global net_impl.cpp:1171 getLayerShapesRecursively     output[0] = [ 1 128 26 26 ]
[ERROR:0@1.469] global net_impl.cpp:1177 getLayerShapesRecursively Exception message: OpenCV(4.7.0) /io/opencv/modules/dnn/src/layers/concat_layer.cpp:109: error: (-201:Incorrect size of input array) Inconsistent shape for ConcatLayer in function 'getMemoryShapes'

Traceback (most recent call last):
  File "/home/pi/Desktop/blind/darknet/blind.py", line 26, in <module>
    outputs = net.forward()
cv2.error: OpenCV(4.7.0) /io/opencv/modules/dnn/src/layers/concat_layer.cpp:109: error: (-201:Incorrect size of input array) Inconsistent shape for ConcatLayer in function 'getMemoryShapes'


